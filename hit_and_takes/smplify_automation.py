import os
import subprocess
import cv2  # OpenCV for extracting the first frame
import glob
import json  # Add this import at the top of the file

# Define folder locations
all_takes_folder = "/home/ademc/hit_and_takes/all_takes"
openpose_output = "/home/ademc/hit_and_takes/openpose_output"
smplify_output = "/home/ademc/hit_and_takes/smplify_output"
smplifyx_script = "/home/ademc/smplify-x/smplifyx/main.py"
config_file = "/home/ademc/smplify-x/cfg_files/fit_smpl.yaml"
model_folder = "/home/ademc/smplify-x/smplx_models"
vposer_ckpt = "/home/ademc/smplify-x/vposer_v1_0"

# Ensure the smplify_output folder exists
os.makedirs(smplify_output, exist_ok=True)

# Find all cam02.mp4 files in the all_takes directory
cam02_files = glob.glob(os.path.join(all_takes_folder, "**", "cam02.mp4"), recursive=True)

# Process each cam02.mp4 file
for cam02_file in cam02_files:
    # Extract the grandparent folder name (e.g., "cmu_bike01_2")
    parent_folder_name = os.path.basename(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(cam02_file)))))

    # Paths for the first frame image, keypoints, and result folder
    first_frame_path = os.path.join(smplify_output, parent_folder_name,f"{parent_folder_name}_first_frame.jpg")
    keypoints_folder = os.path.join(openpose_output, parent_folder_name)
    result_folder = os.path.join(smplify_output, parent_folder_name)

    # Ensure the result folder exists
    os.makedirs(result_folder, exist_ok=True)

    # Extract the first frame of the video
    cap = cv2.VideoCapture(cam02_file)
    ret, frame = cap.read()
    if ret:
        cv2.imwrite(first_frame_path, frame)
        print(f"First frame saved to: {first_frame_path}")
    else:
        print(f"Failed to extract the first frame from: {cam02_file}")
        cap.release()
        continue
    cap.release()

    # Rename the keypoints file in the keypoints folder to match the required name
    required_keypoints_file = f"{parent_folder_name}_first_frame_keypoints.json"
    keypoints_file_path = os.path.join(keypoints_folder, required_keypoints_file)

    # Find the actual keypoints file generated by OpenPose
    existing_keypoints_files = glob.glob(os.path.join(keypoints_folder, "*.json"))
    if existing_keypoints_files:
        # Rename the first JSON file found to the required name
        os.rename(existing_keypoints_files[0], keypoints_file_path)
        print(f"Renamed keypoints file to: {keypoints_file_path}")
    else:
        print(f"No keypoints file found in: {keypoints_folder}")
        continue

    # Check if the keypoints JSON file contains people
    with open(keypoints_file_path, "r") as keypoints_file:
        keypoints_data = json.load(keypoints_file)
        if not keypoints_data.get("people"):  # Check if "people" is empty or missing
            print(f"Skipping {cam02_file} because no people were detected in: {keypoints_file_path}")
            continue

    # Construct the smplify-x command
    smplifyx_command = [
        "python", smplifyx_script,
        "--config", config_file,
        "--img_folder", result_folder,
        "--keyp_folder", keypoints_folder,
        "--result_folder", result_folder,
        "--model_folder", model_folder,
        "--vposer_ckpt", vposer_ckpt,
        "--max_persons", "1" 
    ]

    # Run the smplify-x command
    print(f"Running smplify-x for: {cam02_file}")
    subprocess.run(smplifyx_command, check=True)
    print(f"Results saved to: {result_folder}")